//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = require('./Hello_types');
//HELPER FUNCTIONS AND STRUCTURES

HelloService_helloString_args = function(args) {
  this.para = null;
  if (args) {
    if (args.para !== undefined && args.para !== null) {
      this.para = args.para;
    }
  }
};
HelloService_helloString_args.prototype = {};
HelloService_helloString_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.para = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloString_args.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloString_args');
  if (this.para !== null && this.para !== undefined) {
    output.writeFieldBegin('para', Thrift.Type.STRING, 1);
    output.writeString(this.para);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloService_helloString_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
HelloService_helloString_result.prototype = {};
HelloService_helloString_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloString_result.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloString_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloService_helloInt_args = function(args) {
  this.para = null;
  if (args) {
    if (args.para !== undefined && args.para !== null) {
      this.para = args.para;
    }
  }
};
HelloService_helloInt_args.prototype = {};
HelloService_helloInt_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.para = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloInt_args.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloInt_args');
  if (this.para !== null && this.para !== undefined) {
    output.writeFieldBegin('para', Thrift.Type.I32, 1);
    output.writeI32(this.para);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloService_helloInt_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
HelloService_helloInt_result.prototype = {};
HelloService_helloInt_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloInt_result.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloInt_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloService_helloBoolean_args = function(args) {
  this.para = null;
  if (args) {
    if (args.para !== undefined && args.para !== null) {
      this.para = args.para;
    }
  }
};
HelloService_helloBoolean_args.prototype = {};
HelloService_helloBoolean_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.BOOL) {
        this.para = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloBoolean_args.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloBoolean_args');
  if (this.para !== null && this.para !== undefined) {
    output.writeFieldBegin('para', Thrift.Type.BOOL, 1);
    output.writeBool(this.para);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloService_helloBoolean_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
HelloService_helloBoolean_result.prototype = {};
HelloService_helloBoolean_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloBoolean_result.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloBoolean_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloService_helloVoid_args = function(args) {
};
HelloService_helloVoid_args.prototype = {};
HelloService_helloVoid_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloVoid_args.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloVoid_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloService_helloVoid_result = function(args) {
};
HelloService_helloVoid_result.prototype = {};
HelloService_helloVoid_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloVoid_result.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloVoid_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloService_helloNull_args = function(args) {
};
HelloService_helloNull_args.prototype = {};
HelloService_helloNull_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloNull_args.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloNull_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloService_helloNull_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
HelloService_helloNull_result.prototype = {};
HelloService_helloNull_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

HelloService_helloNull_result.prototype.write = function(output) {
  output.writeStructBegin('HelloService_helloNull_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

HelloServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
HelloServiceClient.prototype = {};
HelloServiceClient.prototype.seqid = function() { return this._seqid; }
HelloServiceClient.prototype.new_seqid = function() { return this._seqid += 1; }
HelloServiceClient.prototype.helloString = function(para, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_helloString(para);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_helloString(para);
  }
};

HelloServiceClient.prototype.send_helloString = function(para) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('helloString', Thrift.MessageType.CALL, this.seqid());
  var args = new HelloService_helloString_args();
  args.para = para;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

HelloServiceClient.prototype.recv_helloString = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new HelloService_helloString_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('helloString failed: unknown result');
};
HelloServiceClient.prototype.helloInt = function(para, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_helloInt(para);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_helloInt(para);
  }
};

HelloServiceClient.prototype.send_helloInt = function(para) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('helloInt', Thrift.MessageType.CALL, this.seqid());
  var args = new HelloService_helloInt_args();
  args.para = para;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

HelloServiceClient.prototype.recv_helloInt = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new HelloService_helloInt_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('helloInt failed: unknown result');
};
HelloServiceClient.prototype.helloBoolean = function(para, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_helloBoolean(para);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_helloBoolean(para);
  }
};

HelloServiceClient.prototype.send_helloBoolean = function(para) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('helloBoolean', Thrift.MessageType.CALL, this.seqid());
  var args = new HelloService_helloBoolean_args();
  args.para = para;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

HelloServiceClient.prototype.recv_helloBoolean = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new HelloService_helloBoolean_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('helloBoolean failed: unknown result');
};
HelloServiceClient.prototype.helloVoid = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_helloVoid();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_helloVoid();
  }
};

HelloServiceClient.prototype.send_helloVoid = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('helloVoid', Thrift.MessageType.CALL, this.seqid());
  var args = new HelloService_helloVoid_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

HelloServiceClient.prototype.recv_helloVoid = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new HelloService_helloVoid_result();
  result.read(input);
  input.readMessageEnd();

  callback(null)
};
HelloServiceClient.prototype.helloNull = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_helloNull();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_helloNull();
  }
};

HelloServiceClient.prototype.send_helloNull = function() {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('helloNull', Thrift.MessageType.CALL, this.seqid());
  var args = new HelloService_helloNull_args();
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

HelloServiceClient.prototype.recv_helloNull = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new HelloService_helloNull_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('helloNull failed: unknown result');
};
HelloServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
HelloServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

HelloServiceProcessor.prototype.process_helloString = function(seqid, input, output) {
  var args = new HelloService_helloString_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.helloString.length === 1) {
    Q.fcall(this._handler.helloString, args.para)
      .then(function(result) {
        var result = new HelloService_helloString_result({success: result});
        output.writeMessageBegin("helloString", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloString", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.helloString(args.para, function (err, result) {
      if (err == null) {
        var result = new HelloService_helloString_result((err != null ? err : {success: result}));
        output.writeMessageBegin("helloString", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloString", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

HelloServiceProcessor.prototype.process_helloInt = function(seqid, input, output) {
  var args = new HelloService_helloInt_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.helloInt.length === 1) {
    Q.fcall(this._handler.helloInt, args.para)
      .then(function(result) {
        var result = new HelloService_helloInt_result({success: result});
        output.writeMessageBegin("helloInt", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloInt", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.helloInt(args.para, function (err, result) {
      if (err == null) {
        var result = new HelloService_helloInt_result((err != null ? err : {success: result}));
        output.writeMessageBegin("helloInt", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloInt", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

HelloServiceProcessor.prototype.process_helloBoolean = function(seqid, input, output) {
  var args = new HelloService_helloBoolean_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.helloBoolean.length === 1) {
    Q.fcall(this._handler.helloBoolean, args.para)
      .then(function(result) {
        var result = new HelloService_helloBoolean_result({success: result});
        output.writeMessageBegin("helloBoolean", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloBoolean", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.helloBoolean(args.para, function (err, result) {
      if (err == null) {
        var result = new HelloService_helloBoolean_result((err != null ? err : {success: result}));
        output.writeMessageBegin("helloBoolean", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloBoolean", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

HelloServiceProcessor.prototype.process_helloVoid = function(seqid, input, output) {
  var args = new HelloService_helloVoid_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.helloVoid.length === 0) {
    Q.fcall(this._handler.helloVoid)
      .then(function(result) {
        var result = new HelloService_helloVoid_result({success: result});
        output.writeMessageBegin("helloVoid", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloVoid", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.helloVoid(function (err, result) {
      if (err == null) {
        var result = new HelloService_helloVoid_result((err != null ? err : {success: result}));
        output.writeMessageBegin("helloVoid", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloVoid", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

HelloServiceProcessor.prototype.process_helloNull = function(seqid, input, output) {
  var args = new HelloService_helloNull_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.helloNull.length === 0) {
    Q.fcall(this._handler.helloNull)
      .then(function(result) {
        var result = new HelloService_helloNull_result({success: result});
        output.writeMessageBegin("helloNull", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloNull", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.helloNull(function (err, result) {
      if (err == null) {
        var result = new HelloService_helloNull_result((err != null ? err : {success: result}));
        output.writeMessageBegin("helloNull", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("helloNull", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

